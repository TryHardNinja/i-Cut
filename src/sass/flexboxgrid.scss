/*! flexbox-grid 栅格 1rem=100px*/

$sg: 0.15rem;
$w1: 751px; $ww1: 750px;
$w2: 992px; $ww2: 970px;
$w3: 1200px; $ww3: 1170px;
$nb: 100%; $column: 12;

@mixin bs {box-sizing: border-box;}
@mixin pdsg {padding-right: $sg; padding-left: $sg;}
@mixin mlra {margin-left: auto; margin-right: auto;}
@mixin mgsg {margin-left: -$sg; margin-right: -$sg;}

* {@include bs;}
*:before,*:after {@include bs;}
.container {/*! width: 100%!important; max-width:1200px; 去掉注释开启适屏模式*/}
.container,.container-fluid {@include mlra; @include pdsg;}

.row{display: flex; flex-flow:row wrap; @include mgsg;}
[class*="col-"],[class*="grow-"]{@include pdsg;}
[class*="col-"]{flex-basis: $nb; max-width: $nb;}

@mixin flexboxgrid ($grid){
	@content;
	@for $i from 1 through $column {.col-#{$grid}-#{$i}{flex-basis: $nb / $column * $i; max-width: $nb / $column * $i}}
	@for $i from 0 through $column {.grow-#{$grid}-#{$i}{flex-grow: $i;}}
	@for $i from 0 through $column {.shrink-#{$grid}-#{$i}{flex-shrink: $i;}}	
	@for $i from 0 through ($column - 1) {.offset-#{$grid}-#{$i}{margin-left: $nb / $column * $i;}}
		
	$fxd: (row, row),(rr, row-reverse),(cn, column),(cr,column-reverse );
	@each $val, $direction in $fxd {		
	.fxd-#{$grid}-#{$val}{flex-direction: $direction;}		
	}
		
	$fxw: (nowrap, nowrap),(wrap, wrap),(wr, wrap-reverse);
	@each $val, $direction in $fxw {		
	.fxw-#{$grid}-#{$val}{flex-wrap: $direction;}	
	}
		
	$jc: (start, flex-start),(center, center),(end, flex-end),(around, space-around),(between, space-between);
	@each $val, $direction in $jc {		
	.jc-#{$grid}-#{$val}{justify-content: $direction;}	
	}
		
	$ai: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(baseline, baseline);
	@each $val, $direction in $ai {		
	.ai-#{$grid}-#{$val}{align-items: $direction;}	
	}	
		
	$ac: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(around, space-around),(between, space-between);
	@each $val, $direction in $ac {		
	.ac-#{$grid}-#{$val}{align-content: $direction;}	
	}

	$as: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(baseline, baseline),(auto, auto);
	@each $val, $direction in $as {		
	.as-#{$grid}-#{$val}{align-self: $direction;}	
	}	

	$order: (first, -1),(last, 999);
	@each $val, $direction in $order {		
	.order-#{$grid}-#{$val}{order: $direction;}	
	}

	@for $i from 0 through $column{
	.order-#{$grid}-#{$i}{order: $i;}
	}

}

@include flexboxgrid (xs){}
$flexboxgrid-data: (sm, $w1, $ww1),(md, $w2, $ww2),(lg, $w3, $ww3);
@each $grid, $w, $ww in $flexboxgrid-data {
	@media only screen and (min-width: $w){		
		.container{width: $ww;}		
		@include flexboxgrid ($grid){}	
	}	
}

@mixin media ($grid){
	@content;	
	.d-#{$grid}-n{display:none;}
	.d-#{$grid}-i{display: inline;}
	.d-#{$grid}-b{display:block;}
	.d-#{$grid}-ib{display: inline-block;}
	.d-#{$grid}-t{display:table;}
	.d-#{$grid}-bc{display:table-cell;}
	
	.fl-#{$grid}-n{float: none;}
	.fl-#{$grid}-l{float: left;}
	.fl-#{$grid}-r{float: right;}

	.pos-#{$grid}-s{position: static;}
	.pos-#{$grid}-f{position: fixed;}
	.pos-#{$grid}-r{position: relative;}
	.pos-#{$grid}-a{position: absolute;}

	.ta-#{$grid}-c{text-align: center;}
	.ta-#{$grid}-l{text-align: left;}
	.ta-#{$grid}-r{text-align: right;}
	.ta-#{$grid}-j{text-align: justify;}

	.bd-#{$grid}-n{border: none;}
	.bdts-#{$grid}-n{border-top-style: none;}
	.bdrs-#{$grid}-n{border-right-style: none;}
	.bdbs-#{$grid}-n{border-bottom-style: none;}
	.bdls-#{$grid}-n{border-left-style: none;}

	@for $i from 0 through 100 {.fz-#{$grid}-#{$i}{font-size:$i + px;}}
	@for $i from 0 through 100 {.lh-#{$grid}-#{$i}{line-height:$i + px;}}
	@for $i from 0 through 100 {.ti-#{$grid}-#{$i}{text-indent:$i + px;}}
	
	@for $i from 0 through 100 {
	.p-#{$grid}-#{$i}{padding:$i + px;}
	.pt-#{$grid}-#{$i}{padding-top:$i + px;}
	.pr-#{$grid}-#{$i}{padding-right:$i + px;}
	.pb-#{$grid}-#{$i}{padding-bottom:$i + px;}
	.pl-#{$grid}-#{$i}{padding-left:$i + px;}
	}

	@for $i from 0 through 100 {
	.m-#{$grid}-#{$i}{margin:$i + px;}
	.mt-#{$grid}-#{$i}{margin-top:$i + px;}
	.mr-#{$grid}-#{$i}{margin-right:$i + px;}
	.mb-#{$grid}-#{$i}{margin-bottom:$i + px;}
	.ml-#{$grid}-#{$i}{margin-left:$i + px;}
	}
	
}

$media-data: (sm, $w1),(md, $w2),(lg, $w3);
@each $grid, $w in $media-data {
	@media only screen and (min-width: $w){	
		@include media ($grid){}	
	}	
}