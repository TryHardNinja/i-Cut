/*! flexbox-grid 栅格 1rem=100px*/

$sg: 0.15rem;
$w1: 751px; $ww1: 750px;
$w2: 992px; $ww2: 970px;
$w3: 1200px; $ww3: 1170px;
$nb: 100%; $column: 12;

@mixin bs {box-sizing: border-box;}
@mixin pdsg {padding-right: $sg; padding-left: $sg;}
@mixin mlra{margin-left: auto; margin-right: auto;}
@mixin mgsg{margin-left: -$sg; margin-right: -$sg;}

*{@include bs;}
*:before,*:after{@include bs;}

.container{/*! width: 100%!important; max-width:1200px; 去掉注释开启适屏模式*/}
.container,.container-fluid{ @include mlra; @include pdsg;}

.row{display: flex; flex-flow:row wrap; @include mgsg;}
[class*="col-"],[class*="grow-"]{@include pdsg;}
[class*="col-"]{flex-basis: $nb; max-width: $nb;}

@mixin flexboxgrid ($grid){

	@content;
	
	@for $i from 1 through $column {.col-#{$grid}-#{$i}{flex-basis: $nb / $column * $i; max-width: $nb / $column * $i}}
	@for $i from 0 through $column {.grow-#{$grid}-#{$i}{flex-grow: $i;}}
	@for $i from 0 through $column {.shrink-#{$grid}-#{$i}{flex-shrink: $i;}}
	
	@for $i from 0 through ($column - 1) {.offset-#{$grid}-#{$i}{margin-left: $nb / $column * $i;}}
		
	$fxd: (row, row),(rr, row-reverse),(cn, column),(cr,column-reverse );
	@each $val, $direction in $fxd {		
	.fxd-#{$grid}-#{$val}{flex-direction: $direction;}		
	}
		
	$fxw: (nowrap, nowrap),(wrap, wrap),(wr, wrap-reverse);
	@each $val, $direction in $fxw {		
	.fxw-#{$grid}-#{$val}{flex-wrap: $direction;}	
	}
		
	$jc: (start, flex-start),(center, center),(end, flex-end),(around, space-around),(between, space-between);
	@each $val, $direction in $jc {		
	.jc-#{$grid}-#{$val}{justify-content: $direction;}	
	}
		
	$ai: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(baseline, baseline);
	@each $val, $direction in $ai {		
	.ai-#{$grid}-#{$val}{align-items: $direction;}	
	}	
		
	$ac: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(around, space-around),(between, space-between);
	@each $val, $direction in $ac {		
	.ac-#{$grid}-#{$val}{align-content: $direction;}	
	}

	$as: (top, flex-start),(middle, center),(bottom, flex-end),(stretch, stretch),(baseline, baseline),(auto, auto);
	@each $val, $direction in $as {		
	.as-#{$grid}-#{$val}{align-self: $direction;}	
	}	

	$order: (first, -1),(same, 0),(last, 1);
	@each $val, $direction in $order {		
	.order-#{$grid}-#{$val}{order: $direction;}	
	}
}

@include flexboxgrid (xs){}
$flexboxgrid-data: (sm, $w1, $ww1),(md, $w2, $ww2),(lg, $w3, $ww3);
@each $grid, $w, $ww in $flexboxgrid-data {
	@media only screen and (min-width: $w){		
		.container{width: $ww;}		
		@include flexboxgrid ($grid){}	
	}	
}